#!/usr/bin/env perl

# Test the extrema.

use strict;
use warnings;

use Test::More;
use Test::WWW::Mechanize;

use IO::All;

my $disordered = shift // -1; # 1 = "disordered", 0 = "no disorder", -1 = "inconclusive"
my $base       = 'http://0.0.0.0:5000';
my $max        = 10;

# Flip the values of plus/minus given the disordered flag
my ( $plus, $minus );
if ( $disordered ) {
    ( $plus, $minus ) = ( $max, 1 );
}
else {
    ( $plus, $minus ) = ( 1, $max );
}

# Read-in quiz questions
my @quiz = io('public/dpda-questions.txt')->slurp;

my $mech = Test::WWW::Mechanize->new();

$mech->get("$base/question");

if ( $mech->status eq '200' ) {
    for my $i ( 0 .. @quiz - 1 ) {
        my $question_num = $mech->scrape_text_by_id('question_num');

        # Get the first pipe separated item of the question, then take the last space separated item
        my $inv = ( split /\s+/, ( split /\|/, $quiz[$question_num] )[0] )[-1];

        my $answer;
        if ( $disordered == -1 ) {
            $answer = $max; #int rand $max + 1;
        }
        else {
            $answer = $inv eq '+' ? $plus : $minus;
        }

        $mech->submit_form_ok(
            { fields => { answer => $answer } },
            "submit form for $inv question $question_num = $answer"
        );
    }

    is $mech->base, "$base/chart", '/chart';
}
else {
    print "Can't connect to $base\n";
}

done_testing();
